import { useEffect, useState } from "react";
import { useTranslation } from "react-i18next";
import { Link, NavLink } from "react-router-dom";
import { Menu, X, Globe, MapPin, Camera, Users, Phone, Home } from "lucide-react";
import logo from "@assets/logo.png";

// Lista de enlaces de navegaciÃ³n principal
const links = [
    { name: "header.home", to: "/", icon: Home },
    { name: "header.destinations", to: "/destinations", icon: MapPin },
    { name: "header.experiences", to: "/experiences", icon: Camera },
    { name: "header.about", to: "/about", icon: Users },
    { name: "header.contact", to: "/contact", icon: Phone },
];

const Header = () => {
    const { t, i18n } = useTranslation("global");
    const [isMenuOpen, setIsMenuOpen] = useState(false); // Estado para el menÃº mÃ³vil
    const [scrolled, setScrolled] = useState(false);

    // Efecto para detectar scroll
    useEffect(() => {
        const handleScroll = () => {
            setScrolled(window.scrollY > 20);
        };
        window.addEventListener('scroll', handleScroll);
        return () => window.removeEventListener('scroll', handleScroll);
    }, []);

    // Cargar idioma guardado en localStorage al iniciar
    useEffect(() => {
        const savedLanguage = localStorage.getItem("language");
        if (savedLanguage) {
            i18n.changeLanguage(savedLanguage);
        }
    }, [i18n]);

    // FunciÃ³n para cambiar de idioma y guardarlo en localStorage
    const changeLanguage = (lng) => {
        i18n.changeLanguage(lng);
        localStorage.setItem("language", lng);
    };

    // Prevenir scroll cuando el menÃº estÃ¡ abierto
    useEffect(() => {
        if (isMenuOpen) {
            document.body.style.overflow = 'hidden';
        } else {
            document.body.style.overflow = 'unset';
        }
        return () => {
            document.body.style.overflow = 'unset';
        };
    }, [isMenuOpen]);

    return (
        <>
            <header className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${scrolled ? 'bg-white shadow-md' : 'bg-white/95 backdrop-blur-sm'
                }`}>
                <div className="card-base">
                    <div className="flex justify-between items-center">
                        <Link to="/" className="cursor-pointer">
                            <img src={logo} alt="Logo" />
                        </Link>

                        <nav className="hidden lg:flex items-center space-x-8">
                            {links.map((l) => {
                                const IconComponent = l.icon;

                                return (
                                    <NavLink
                                        to={l.to}
                                        key={l.name}
                                        className={({ isActive }) => `group flex items-center space-x-2 px-3 py-2 cursor-pointer transition-colors duration-300 ${isActive ? "text-primary" : "text-gray-700 hover:text-primary"}`}
                                    >
                                        <IconComponent className="w-4 h-4 opacity-60 group-hover:opacity-100 transition-opacity duration-200" />
                                        <span className="font-medium text-sm tracking-wide">
                                            {t(l.name)}
                                        </span>
                                    </NavLink>
                                );
                            })}
                        </nav>
                        <div className="flex items-center space-x-4">
                            <div className="flex items-center space-x-1 bg-gray-50 rounded-full p-1">
                                <button
                                    onClick={() => changeLanguage("es")}
                                    aria-label="Cambiar a espaÃ±ol"
                                >
                                    ðŸ‡ªðŸ‡¸
                                </button>
                                <button
                                    onClick={() => changeLanguage("en")}
                                    aria-label="Cambiar a inglÃ©s"
                                >
                                    ðŸ‡ºðŸ‡¸
                                </button>
                            </div>
                            <button
                                aria-label="Abrir menÃº"
                                onClick={() => setIsMenuOpen((prev) => !prev)}
                                className="lg:hidden flex"
                            >
                                â˜°
                            </button>
                        </div>
                    </div>
                </div>
            </header>
            {/* Overlay */}
            <div className={`fixed inset-0 bg-black/30 backdrop-blur-sm z-40 transition-opacity duration-300 lg:hidden ${isMenuOpen ? 'opacity-100 visible' : 'opacity-0 invisible'
                }`} onClick={() => setIsMenuOpen(false)} />

            {/* MenÃº lateral mÃ³vil */}
            <div className={`fixed top-0 left-0 h-full w-80 bg-white shadow-2xl z-50 transform transition-transform duration-300 ease-out lg:hidden ${isMenuOpen ? 'translate-x-0' : '-translate-x-full'
                }`}>
                <div className="flex flex-col h-full">
                    {/* Header del menÃº */}
                    <div className="flex items-center justify-between p-6 border-b border-gray-100">
                        <div className="flex items-center space-x-3">
                            <div className="w-8 h-8 rounded-full bg-black flex items-center justify-center">
                                <Globe className="w-5 h-5 text-white" />
                            </div>
                            <span className="text-xl font-light tracking-wide text-gray-900">
                                WanderLust
                            </span>
                        </div>
                        <button
                            onClick={() => setIsMenuOpen(false)}
                            className="p-2 text-gray-500 hover:text-gray-700 transition-colors duration-200"
                            aria-label="Cerrar menÃº"
                        >
                            <X className="w-5 h-5" />
                        </button>
                    </div>

                    {/* NavegaciÃ³n */}
                    <nav className="flex-1 px-6 py-8">
                        <div className="space-y-1">
                            {links.map((l, index) => {
                                const IconComponent = l.icon;
                                return (
                                    <NavLink
                                        to={l.to}
                                        key={l.name}
                                        onClick={() => setIsMenuOpen(false)}
                                        className="flex items-center space-x-4 px-4 py-4 text-gray-700 hover:text-black hover:bg-gray-50 rounded-lg transition-all duration-200 cursor-pointer group"
                                        style={{
                                            transitionDelay: isMenuOpen ? `${index * 50}ms` : '0ms'
                                        }}
                                    >
                                        <div className="w-10 h-10 rounded-full bg-gray-100 group-hover:bg-gray-200 flex items-center justify-center transition-colors duration-200">
                                            <IconComponent className="w-5 h-5" />
                                        </div>
                                        <span className="font-medium text-base tracking-wide">{t(l.name)}</span>
                                    </NavLink>
                                );
                            })}
                        </div>
                    </nav>

                    {/* Footer del menÃº */}
                    <div className="p-6 border-t border-gray-100">
                        <div className="text-xs text-gray-500 text-center">
                            Â© 2025 WanderLust Travel Agency
                        </div>
                    </div>
                </div>
            </div>
        </>


    );
};

export default Header;
